{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api/todos.ts","api/users.ts","App.tsx","index.tsx"],"names":["TodoItem","React","memo","title","completed","id","user","useState","done","setDone","className","name","htmlFor","type","checked","onChange","currentDone","TodoList","todos","users","map","userId","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedUser","usersFromServer","reduce","acc","maxTodoId","todosFromServer","at","App","setTodos","setTitle","currentUserId","setCurrentUser","userIdError","setUserIdError","titleError","setTitleError","handleChange","event","newChar","target","value","slice","test","onSubmit","preventDefault","length","newTodo","oldTodos","placeholder","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1c455c8.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport './TodoItem.scss';\n\ntype Props = Pick<Todo, 'title' | 'completed' | 'id'> & {\n  user: User,\n};\n\nconst TodoItem: React.FC<Props> = React.memo(({\n  title, completed, id, user,\n}) => {\n  const [done, setDone] = useState(completed);\n\n  const handleClick = () => {\n    setDone((currentDone) => !currentDone);\n  };\n\n  return (\n    <li\n      className={`todoItem ${done ? 'todoItem--completed' : ''}`}\n    >\n      <div>\n        <i>{user.name}</i>\n        <h4>{title}</h4>\n      </div>\n      <label htmlFor={`todoCheckbox_${id}`} className=\"todoItem__checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"completed\"\n          id={`todoCheckbox_${id}`}\n          checked={done}\n          onChange={handleClick}\n        />\n      </label>\n    </li>\n  );\n});\n\nexport default TodoItem;\n","import React, { FC, Fragment } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { LinkedUsers } from '../../types/User';\n\nimport TodoItem from '../TodoItem/TodoItem';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  users: LinkedUsers,\n};\n\nexport const TodoList: FC<Props> = React.memo(({ todos, users }) => {\n  return (\n    <ul className=\"todoList\">\n      {todos.map(({\n        title, completed, id, userId,\n      }) => (\n        <Fragment key={id}>\n          <TodoItem\n            id={id}\n            title={title}\n            user={users[userId]}\n            completed={completed}\n          />\n        </Fragment>\n      ))}\n    </ul>\n  );\n});\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { LinkedUsers, User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nconst getPreparedUsers = (userList: User[]): LinkedUsers => {\n  return userList.reduce((acc, user) => (\n    {\n      ...acc,\n      [user.id]: user,\n    }\n  ), {});\n};\n\nconst preparedUser = getPreparedUsers(usersFromServer);\n\nlet maxTodoId = todosFromServer.at(-1)?.id || 0;\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState((): Todo[] => todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [currentUserId, setCurrentUser] = useState(-1);\n\n  const [userIdError, setUserIdError] = useState('');\n  const [titleError, setTitleError] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.length) {\n      setTitleError('Please enter the title');\n    }\n\n    if (currentUserId < 0) {\n      setUserIdError('Please choose a user');\n    }\n\n    if (currentUserId !== -1 && title.length > 0) {\n      maxTodoId += 1;\n\n      const newTodo: Todo = {\n        id: maxTodoId,\n        userId: currentUserId,\n        title,\n        completed: false,\n      };\n\n      setTodos((oldTodos) => ([\n        ...oldTodos,\n        newTodo,\n      ]));\n\n      setTitle('');\n      setCurrentUser(-1);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = event.target;\n\n    const cyrillicPattern = /^[а-яА-Яё][а-яА-Яё\\s-]*$/;\n    const latinPattern = /^[a-zA-Z][a-zA-Z\\s-]*$/;\n\n    let newChar;\n\n    switch (name) {\n      case 'title':\n        setTitleError('');\n\n        newChar = value.slice(-1);\n\n        if (cyrillicPattern.test(newChar) || latinPattern.test(newChar)\n          || newChar === ' ' || value === '') {\n          setTitle(value);\n        }\n\n        break;\n\n      case 'userId':\n        setUserIdError('');\n        setCurrentUser(+value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit} className=\"addTodoFrom\">\n        <label htmlFor=\"titleInput\" className=\"addTodoFrom__label\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            id=\"titleInput\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            className=\"addTodoFrom__field\"\n          />\n\n          {titleError && (\n            <span className=\"addTodoFrom__errorText\">\n              {titleError}\n            </span>\n          )}\n        </label>\n\n        <label htmlFor=\"userSelect\" className=\"addTodoFrom__label\">\n          <select\n            name=\"userId\"\n            id=\"userSelect\"\n            onChange={handleChange}\n            className=\"addTodoFrom__field\"\n          >\n            <option value={-1} selected={currentUserId === -1}>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>{name}</option>\n            ))}\n          </select>\n\n          {userIdError && (\n            <span className=\"addTodoFrom__errorText\">\n              {userIdError}\n            </span>\n          )}\n        </label>\n\n        <button type=\"submit\" className=\"addTodoFrom__button\">Add</button>\n      </form>\n\n      <TodoList todos={todos} users={preparedUser} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}